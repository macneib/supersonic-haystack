pr:
  autoCancel: false
  branches:
    include:
    - main
    - develop

trigger:
  batch: false
  branches:
    include:
    - main
    - develop

resources:
- repo: self

stages:
  - stage: ci
    displayName: Build Queue
    pool:
      vmImage: 'ubuntu-latest'
    jobs:
      # set up node.js environment
      - job: initial_setup
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - template: .azure-pipelines/steps/install-node-modules.yml
      # Construct a queue of apps to be built
      - job: Build_Queue
        dependsOn: initial_setup
        pool:
          vmImage: 'ubuntu-latest'
        variables:
          IS_PR: $[ eq(variables['Build.Reason'], 'PullRequest') ]
        steps:
          - bash: echo '##vso[task.setvariable variable=buildQueue;isOutput=true]$(npm run affected)'
            name: setQueue
          - script: echo "$(setQueue.buildQueue)"
            name: echoQueue

      # Each App and it's template that can be built.
      - template: .azure-pipelines/steps/build-nodejs-template.yml
        parameters:
          name: foo-app
      - template: .azure-pipelines/steps/build-nodejs-template.yml
        parameters:
          name: bar-app
      - template: .azure-pipelines/steps/build-nodejs-template.yml
        parameters:
          name: baz-app

  # - stage: dev
  #   displayName: Dev Deployment
  #   dependsOn: Build_Queue
  #   # condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  #   jobs:
  #     - job: Helm
  #       steps:
  #         - script: echo Helm Step
  #           displayName: Helm reason is $(Build.Reason)

  # - stage: DeployPullRequest
  #   dependsOn: Build_Queue
  #   condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
  #   displayName: Deploy Pull request
  #   jobs:
  #     - job: Helm

  #       steps:
  #         - script: echo Helm Step
  #           displayName: Helm reason is $(Build.Reason)

  # - stage: qa
  #   dependsOn: dev
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  #   displayName: QA Deployment
  #   jobs:
  #     - job: Helm
  #       steps:
  #         - script: echo Helm Step
  #           displayName: Helm reason is $(Build.Reason)

  # - stage: production
  #   dependsOn: qa
  #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  #   displayName: Production Deployment
  #   jobs:
  #     - job: Helm
  #       steps:
  #         - script: echo Helm Step
  #           displayName: Helm reason is $(Build.Reason)
